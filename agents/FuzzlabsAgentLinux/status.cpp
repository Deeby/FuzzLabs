#include "status.h"

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

Status::Status() {
    pid = -1;
    signal = -1;
    e_code = -1;
    c_status = P_NOTINIT;
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

void Status::reset() {
    pid = -1;
    signal = -1;
    e_code = -1;
    c_status = P_NOTINIT;    
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

void Status::setState(p_status s) {
    c_status = s;
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

int Status::getState() {
    return(c_status);
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

void Status::setPid(int p_pid) {
    pid = p_pid;
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

int Status::getPid() {
    return(pid);
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

void Status::setSignal(int p_sig) {
    signal = p_sig;
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

int Status::getSignalNum() {
    return(signal);
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

void Status::getSignalStr(char *buf, unsigned int len) {
    memset(buf, 0x00, len);
    char *t_s_signal = strsignal(signal);
    if (t_s_signal == NULL) return;
    strncpy(buf, t_s_signal, len - 1);
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

void Status::setExitCode(int p_e_code) {
    e_code = p_e_code;
}

// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------

int Status::getExitCode() {
    return(e_code);
}
